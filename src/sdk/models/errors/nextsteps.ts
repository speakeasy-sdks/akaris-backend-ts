/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../../internal/utils";
import { NextStep } from "./nextstep";
import { classToPlain, Expose, Type } from "class-transformer";

export class NextSteps extends Error {
    @SpeakeasyMetadata({ elemType: NextStep })
    @Expose({ name: "NextStep" })
    @Type(() => NextStep)
    nextStep: NextStep[];

    /**
     * The base portion of the uri in order to shorten the uri's in the individual steps
     */
    @SpeakeasyMetadata()
    @Expose({ name: "baseURI" })
    baseURI: string;

    /**
     * Optional internally referenced id
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    constructor(err?: NextSteps) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "NextSteps";
        Object.setPrototypeOf(this, NextSteps.prototype);
    }
}
