/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../../internal/utils";
import { classToPlain, Expose } from "class-transformer";

/**
 * Currency codes are the three-letter alphabetic codes that represent the various currencies used throughout the world.
 */
export class CurrencyCode extends Error {
    /**
     * Currency code authority
     */
    @SpeakeasyMetadata()
    @Expose({ name: "codeAuthority" })
    codeAuthority?: string;

    /**
     * Currency code decimal authority
     */
    @SpeakeasyMetadata()
    @Expose({ name: "decimalAuthority" })
    decimalAuthority?: string;

    /**
     * Currency code decimal place
     */
    @SpeakeasyMetadata()
    @Expose({ name: "decimalPlace" })
    decimalPlace?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;

    constructor(err?: CurrencyCode) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "CurrencyCode";
        Object.setPrototypeOf(this, CurrencyCode.prototype);
    }
}
