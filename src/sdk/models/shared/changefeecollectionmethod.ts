/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChangeFeeMethodEnum } from "./changefeemethodenum";
import { Expose, Type } from "class-transformer";

export class ChangeFeeCollectionMethod extends SpeakeasyBase {
    /**
     * if true, the change fee will be issued as a separate transaction to the residual amount
     */
    @SpeakeasyMetadata()
    @Expose({ name: "changeFeeIssuedSeparatelyInd" })
    changeFeeIssuedSeparatelyInd?: boolean;

    /**
     * The code value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "code" })
    code: string;

    /**
     * The description value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The subcode value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subCode" })
    subCode?: string;

    /**
     * If true, the tax  on the fee will be included in the base fee amount and sent as a single value to the supplier for fulfilment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "taxIncludedInBaseAmountInd" })
    taxIncludedInBaseAmountInd?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    @Type(() => ChangeFeeMethodEnum)
    value?: ChangeFeeMethodEnum;
}
