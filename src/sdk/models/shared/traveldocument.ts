/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../../sdk/types";
import { DocTypeCodeEnum } from "./doctypecodeenum";
import { GenderEnum } from "./genderenum";
import { PersonName } from "./personname";
import { Expose, Transform, Type } from "class-transformer";

export class TravelDocument extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "@type" })
    atType: string;

    /**
     * Gender Type Male, Female etc. This field is not used by Hotel APIs and will be ignored
     */
    @SpeakeasyMetadata()
    @Expose({ name: "Gender" })
    gender: GenderEnum;

    /**
     * Specifies a 2 character country code as defined in ISO3166.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "Nationality" })
    nationality?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "PersonName" })
    @Type(() => PersonName)
    personName: PersonName;

    /**
     * Birth country on Country Code ISO value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "birthCountry" })
    birthCountry?: string;

    /**
     * The date of birth of the document holder
     */
    @SpeakeasyMetadata()
    @Expose({ name: "birthDate" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    birthDate?: RFCDate;

    /**
     * Birth place value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "birthPlace" })
    birthPlace?: string;

    /**
     * Document number value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "docNumber" })
    docNumber: string;

    /**
     * Codes from OTA DOC - Document Type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "docType" })
    docType?: DocTypeCodeEnum;

    /**
     * Date of expiration
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expireDate" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    expireDate?: RFCDate;

    /**
     * Locally referenced id
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * Issue country on Country Code ISO
     */
    @SpeakeasyMetadata()
    @Expose({ name: "issueCountry" })
    issueCountry?: string;

    /**
     * Date of Issue
     */
    @SpeakeasyMetadata()
    @Expose({ name: "issueDate" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    issueDate?: RFCDate;

    /**
     * Place of issue value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "placeOfIssue" })
    placeOfIssue?: string;

    /**
     * Residence value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "residence" })
    residence?: string;

    /**
     * State Province Code value
     */
    @SpeakeasyMetadata()
    @Expose({ name: "stateProvCode" })
    stateProvCode?: string;
}
