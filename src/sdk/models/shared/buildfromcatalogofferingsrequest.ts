/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AncillaryOfferingIdentifier } from "./ancillaryofferingidentifier";
import { CatalogOfferingIdentifier } from "./catalogofferingidentifier";
import { CatalogOfferingsIdentifier } from "./catalogofferingsidentifier";
import { ProductIdentifier } from "./productidentifier";
import { Expose, Type } from "class-transformer";

export class BuildFromCatalogOfferingsRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "@type" })
    atType: string;

    @SpeakeasyMetadata({ elemType: AncillaryOfferingIdentifier })
    @Expose({ name: "AncillaryOfferingIdentifier" })
    @Type(() => AncillaryOfferingIdentifier)
    ancillaryOfferingIdentifier?: AncillaryOfferingIdentifier[];

    @SpeakeasyMetadata()
    @Expose({ name: "CatalogOfferingIdentifier" })
    @Type(() => CatalogOfferingIdentifier)
    catalogOfferingIdentifier: CatalogOfferingIdentifier;

    @SpeakeasyMetadata()
    @Expose({ name: "CatalogOfferingsIdentifier" })
    @Type(() => CatalogOfferingsIdentifier)
    catalogOfferingsIdentifier: CatalogOfferingsIdentifier;

    @SpeakeasyMetadata({ elemType: ProductIdentifier })
    @Expose({ name: "ProductIdentifier" })
    @Type(() => ProductIdentifier)
    productIdentifier: ProductIdentifier[];
}
