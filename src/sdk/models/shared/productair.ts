/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FlightSegment } from "./flightsegment";
import { Identifier } from "./identifier";
import { PassengerFlight } from "./passengerflight";
import { Expose, Type } from "class-transformer";

export class ProductAir extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "@type" })
    atType: string;

    @SpeakeasyMetadata({ elemType: FlightSegment })
    @Expose({ name: "FlightSegment" })
    @Type(() => FlightSegment)
    flightSegment: FlightSegment[];

    /**
     * Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "Identifier" })
    @Type(() => Identifier)
    identifier?: Identifier;

    @SpeakeasyMetadata({ elemType: PassengerFlight })
    @Expose({ name: "PassengerFlight" })
    @Type(() => PassengerFlight)
    passengerFlight: PassengerFlight[];

    /**
     * The quantity of the product
     */
    @SpeakeasyMetadata()
    @Expose({ name: "Quantity" })
    quantity?: number;

    /**
     * Local indentifier within a given message for this object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * Used to reference another instance of this object in the same message
     */
    @SpeakeasyMetadata()
    @Expose({ name: "productRef" })
    productRef?: string;

    /**
     * Total duration of all Segments that are part of this ProductAir
     */
    @SpeakeasyMetadata()
    @Expose({ name: "totalDuration" })
    totalDuration?: string;
}
