/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CurrencySourceEnum } from "./currencysourceenum";
import { Expose } from "class-transformer";

/**
 * A monetary amount, up to 4 decimal places. Decimal place needs to be included.
 */
export class CurrencyAmount extends SpeakeasyBase {
    /**
     * True if the currency amount has been converted from the original amount
     */
    @SpeakeasyMetadata()
    @Expose({ name: "approximateInd" })
    approximateInd?: boolean;

    /**
     * An ISO 4217 alpha character code that specifies a money unit
     */
    @SpeakeasyMetadata()
    @Expose({ name: "code" })
    code?: string;

    /**
     * The system requesting or returning the currency code specified in the attribute
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currencySource" })
    currencySource?: CurrencySourceEnum;

    /**
     * Minor units are a mechanism for expressing the relationship between a major currency unit and its corresponding minor currency unit.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minorUnit" })
    minorUnit?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: number;
}
