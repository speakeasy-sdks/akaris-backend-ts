/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../../sdk/types";
import { DurationUnitEnum } from "./durationunitenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Indicates the expiry date.
 */
export class DateOrDateWindows extends SpeakeasyBase {
    /**
     * Duration from  start date.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "duration" })
    duration?: string;

    /**
     * Defines the Units that can be applied to Stay restrictions.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "durationUnit" })
    durationUnit?: DurationUnitEnum;

    /**
     * The earliest and latest dates acceptable for the end date.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "end" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    end?: RFCDate;

    /**
     * A specific date. When used with a windows must fall between start and end.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "specific" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    specific?: RFCDate;

    /**
     * The earliest and latest dates acceptable for the start date.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "start" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    start?: RFCDate;
}
